#**
  Template for the creation of JPA Entities. Expectes the following variables as inputs (see template_data for more):
    targetPackagePath: String; Path of the packge the file will be used
    entity: EntityModel; Model containing getMethods for the needed variables
    mtoAssociations: List<AssociationsModel>; List of "many-to-one" associations
    otmAssociations: List<AssociationsModel>; List of "one-to-many" associations

  @author Jonas Knebel
  @version 1 Initial creation of entity-base.vm with basic statements based on the expected results

  @author Tom Schmanke
  @version 2 Rework of entity template based on the given data structure. This mainly includes import statemens,
  loops, less template duplication, structure of variables and indentation

  @author Tom Schmanke
  @version 3 Transform controller template for abstract class based custom code saving

  @author Laura Schmidt
  @version 4 change datatype of OneToMany associations to Collection<Type>, attribute creation and visibilty

  @author Laura Schmidt
  @version 5 setter and getter generation
*#
package ${targetPackagePath};

import java.util.Collection;
import jakarta.persistence.*;
import com.fasterxml.jackson.annotation.JsonIgnore;

public abstract class ${entity.getEntityName()}Base {

    @Id
    @GeneratedValue
    private int ${entity.getIdentificationVariableSmall()};

    #foreach ($attributeModel in $entity.getAttributeDataModels())
    ${attributeModel.getAttributeVisibility().toString().toLowerCase()} ${attributeModel.getAttributeType()} ${attributeModel.getAttributeNameSmall()};

    #end
    #foreach ($mtoAssociation in $mtoAssociations)
    @ManyToOne
    @JoinColumn(name="${mtoAssociation.getFKKey()}")
    private ${mtoAssociation.getReferencedEntity()}Impl ${mtoAssociation.getReferencedNameSmall()};

    #end
    #foreach ($otmAssociation in $otmAssociations)
    @OneToMany(fetch=FetchType.LAZY, cascade=CascadeType.ALL, mappedBy="${otmAssociation.getMappedByKey()}")
    @JsonIgnore
    private Collection<${otmAssociation.getFKEntity()}Impl> ${otmAssociation.getFKNameSmall()};

    #end

    public ${entity.getEntityName()}Base() {

    }

    public ${entity.getEntityName()}Base (${entity.getAttributesForConstructorHeader()}) {
        ${entity.getAttributesForConstructorBody()}
    }

    public int get${entity.getIdentificationVariable()}() {
        return ${entity.getIdentificationVariableSmall()};
    }

    public void set${entity.getIdentificationVariable()}(int ${entity.getIdentificationVariableSmall()}) {
        this.${entity.getIdentificationVariableSmall()} = ${entity.getIdentificationVariableSmall()};
    }

    #foreach($attributeModel in $entity.getAttributeDataModels())
        #parse("entity_templates/getter_setter_templates/get-set-attr.vm")
    #end
    #foreach($mtoAssociation in $mtoAssociations)
        #parse("entity_templates/getter_setter_templates/get-set-mto.vm")
    #end
    #foreach($otmAssociation in $otmAssociations)
        #parse("entity_templates/getter_setter_templates/get-set-otm.vm")
    #end
}
