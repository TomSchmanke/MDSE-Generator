{
  "files" : [ {
    "filename" : ".\\generated-application\\.editorconfig",
    "content" : [ "# Topmost editor config file", "root = true", "", "# Custom Coding Styles for Java files", "[*.java]", "", "# The other allowed value you can use is space", "indent_style = tab", "", "# You can play with this value and set it to how", "# many characters you want your indentation to be", "indent_size = 4", "", "# Character set to be used in java files.", "charset = utf-8", "trim_trailing_whitespace = true" ]
  }, {
    "filename" : ".\\generated-application\\.gitignore",
    "content" : [ "HELP.md", "target/", "!.mvn/wrapper/maven-wrapper.jar", "!**/src/main/**/target/", "!**/src/test/**/target/", "", "### STS ###", ".apt_generated", ".classpath", ".factorypath", ".project", ".settings", ".springBeans", ".sts4-cache", "", "### IntelliJ IDEA ###", ".idea", "*.iws", "*.iml", "*.ipr", "", "### NetBeans ###", "/nbproject/private/", "/nbbuild/", "/dist/", "/nbdist/", "/.nb-gradle/", "build/", "!**/src/main/**/build/", "!**/src/test/**/build/", "", "### VS Code ###", ".vscode/" ]
  }, {
    "filename" : ".\\generated-application\\.mvn\\wrapper\\maven-wrapper.properties",
    "content" : [ "distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.8.6/apache-maven-3.8.6-bin.zip", "wrapperUrl=https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar" ]
  }, {
    "filename" : ".\\generated-application\\HELP.md",
    "content" : [ "# Read Me First", "The following was discovered as part of building this project:", "", "* The original package name 'de.generator.generated-application' is invalid and this project uses 'de.generator.generatedapplication' instead.", "", "# Getting Started", "", "### Reference Documentation", "For further reference, please consider the following sections:", "", "* [Official Apache Maven documentation](https://maven.apache.org/guides/index.html)", "* [Spring Boot Maven Plugin Reference Guide](https://docs.spring.io/spring-boot/docs/3.0.2/maven-plugin/reference/html/)", "* [Create an OCI image](https://docs.spring.io/spring-boot/docs/3.0.2/maven-plugin/reference/html/#build-image)", "* [Spring Boot DevTools](https://docs.spring.io/spring-boot/docs/3.0.2/reference/htmlsingle/#using.devtools)", "* [Spring Web](https://docs.spring.io/spring-boot/docs/3.0.2/reference/htmlsingle/#web)", "* [Spring Data JPA](https://docs.spring.io/spring-boot/docs/3.0.2/reference/htmlsingle/#data.sql.jpa-and-spring-data)", "", "### Guides", "The following guides illustrate how to use some features concretely:", "", "* [Building a RESTful Web Service](https://spring.io/guides/gs/rest-service/)", "* [Serving Web Content with Spring MVC](https://spring.io/guides/gs/serving-web-content/)", "* [Building REST services with Spring](https://spring.io/guides/tutorials/rest/)", "* [Accessing Data with JPA](https://spring.io/guides/gs/accessing-data-jpa/)", "" ]
  }, {
    "filename" : ".\\generated-application\\mvnw",
    "content" : [ "#!/bin/sh", "# ----------------------------------------------------------------------------", "# Licensed to the Apache Software Foundation (ASF) under one", "# or more contributor license agreements.  See the NOTICE file", "# distributed with this work for additional information", "# regarding copyright ownership.  The ASF licenses this file", "# to you under the Apache License, Version 2.0 (the", "# \"License\"); you may not use this file except in compliance", "# with the License.  You may obtain a copy of the License at", "#", "#    https://www.apache.org/licenses/LICENSE-2.0", "#", "# Unless required by applicable law or agreed to in writing,", "# software distributed under the License is distributed on an", "# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY", "# KIND, either express or implied.  See the License for the", "# specific language governing permissions and limitations", "# under the License.", "# ----------------------------------------------------------------------------", "", "# ----------------------------------------------------------------------------", "# Maven Start Up Batch script", "#", "# Required ENV vars:", "# ------------------", "#   JAVA_HOME - location of a JDK home dir", "#", "# Optional ENV vars", "# -----------------", "#   M2_HOME - location of maven2's installed home dir", "#   MAVEN_OPTS - parameters passed to the Java VM when running Maven", "#     e.g. to debug Maven itself, use", "#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000", "#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files", "# ----------------------------------------------------------------------------", "", "if [ -z \"$MAVEN_SKIP_RC\" ] ; then", "", "  if [ -f /usr/local/etc/mavenrc ] ; then", "    . /usr/local/etc/mavenrc", "  fi", "", "  if [ -f /etc/mavenrc ] ; then", "    . /etc/mavenrc", "  fi", "", "  if [ -f \"$HOME/.mavenrc\" ] ; then", "    . \"$HOME/.mavenrc\"", "  fi", "", "fi", "", "# OS specific support.  $var _must_ be set to either true or false.", "cygwin=false;", "darwin=false;", "mingw=false", "case \"`uname`\" in", "  CYGWIN*) cygwin=true ;;", "  MINGW*) mingw=true;;", "  Darwin*) darwin=true", "    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home", "    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html", "    if [ -z \"$JAVA_HOME\" ]; then", "      if [ -x \"/usr/libexec/java_home\" ]; then", "        export JAVA_HOME=\"`/usr/libexec/java_home`\"", "      else", "        export JAVA_HOME=\"/Library/Java/Home\"", "      fi", "    fi", "    ;;", "esac", "", "if [ -z \"$JAVA_HOME\" ] ; then", "  if [ -r /etc/gentoo-release ] ; then", "    JAVA_HOME=`java-config --jre-home`", "  fi", "fi", "", "if [ -z \"$M2_HOME\" ] ; then", "  ## resolve links - $0 may be a link to maven's home", "  PRG=\"$0\"", "", "  # need this for relative symlinks", "  while [ -h \"$PRG\" ] ; do", "    ls=`ls -ld \"$PRG\"`", "    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`", "    if expr \"$link\" : '/.*' > /dev/null; then", "      PRG=\"$link\"", "    else", "      PRG=\"`dirname \"$PRG\"`/$link\"", "    fi", "  done", "", "  saveddir=`pwd`", "", "  M2_HOME=`dirname \"$PRG\"`/..", "", "  # make it fully qualified", "  M2_HOME=`cd \"$M2_HOME\" && pwd`", "", "  cd \"$saveddir\"", "  # echo Using m2 at $M2_HOME", "fi", "", "# For Cygwin, ensure paths are in UNIX format before anything is touched", "if $cygwin ; then", "  [ -n \"$M2_HOME\" ] &&", "    M2_HOME=`cygpath --unix \"$M2_HOME\"`", "  [ -n \"$JAVA_HOME\" ] &&", "    JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`", "  [ -n \"$CLASSPATH\" ] &&", "    CLASSPATH=`cygpath --path --unix \"$CLASSPATH\"`", "fi", "", "# For Mingw, ensure paths are in UNIX format before anything is touched", "if $mingw ; then", "  [ -n \"$M2_HOME\" ] &&", "    M2_HOME=\"`(cd \"$M2_HOME\"; pwd)`\"", "  [ -n \"$JAVA_HOME\" ] &&", "    JAVA_HOME=\"`(cd \"$JAVA_HOME\"; pwd)`\"", "fi", "", "if [ -z \"$JAVA_HOME\" ]; then", "  javaExecutable=\"`which javac`\"", "  if [ -n \"$javaExecutable\" ] && ! [ \"`expr \\\"$javaExecutable\\\" : '\\([^ ]*\\)'`\" = \"no\" ]; then", "    # readlink(1) is not available as standard on Solaris 10.", "    readLink=`which readlink`", "    if [ ! `expr \"$readLink\" : '\\([^ ]*\\)'` = \"no\" ]; then", "      if $darwin ; then", "        javaHome=\"`dirname \\\"$javaExecutable\\\"`\"", "        javaExecutable=\"`cd \\\"$javaHome\\\" && pwd -P`/javac\"", "      else", "        javaExecutable=\"`readlink -f \\\"$javaExecutable\\\"`\"", "      fi", "      javaHome=\"`dirname \\\"$javaExecutable\\\"`\"", "      javaHome=`expr \"$javaHome\" : '\\(.*\\)/bin'`", "      JAVA_HOME=\"$javaHome\"", "      export JAVA_HOME", "    fi", "  fi", "fi", "", "if [ -z \"$JAVACMD\" ] ; then", "  if [ -n \"$JAVA_HOME\"  ] ; then", "    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then", "      # IBM's JDK on AIX uses strange locations for the executables", "      JAVACMD=\"$JAVA_HOME/jre/sh/java\"", "    else", "      JAVACMD=\"$JAVA_HOME/bin/java\"", "    fi", "  else", "    JAVACMD=\"`\\\\unset -f command; \\\\command -v java`\"", "  fi", "fi", "", "if [ ! -x \"$JAVACMD\" ] ; then", "  echo \"Error: JAVA_HOME is not defined correctly.\" >&2", "  echo \"  We cannot execute $JAVACMD\" >&2", "  exit 1", "fi", "", "if [ -z \"$JAVA_HOME\" ] ; then", "  echo \"Warning: JAVA_HOME environment variable is not set.\"", "fi", "", "CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher", "", "# traverses directory structure from process work directory to filesystem root", "# first directory with .mvn subdirectory is considered project base directory", "find_maven_basedir() {", "", "  if [ -z \"$1\" ]", "  then", "    echo \"Path not specified to find_maven_basedir\"", "    return 1", "  fi", "", "  basedir=\"$1\"", "  wdir=\"$1\"", "  while [ \"$wdir\" != '/' ] ; do", "    if [ -d \"$wdir\"/.mvn ] ; then", "      basedir=$wdir", "      break", "    fi", "    # workaround for JBEAP-8937 (on Solaris 10/Sparc)", "    if [ -d \"${wdir}\" ]; then", "      wdir=`cd \"$wdir/..\"; pwd`", "    fi", "    # end of workaround", "  done", "  echo \"${basedir}\"", "}", "", "# concatenates all lines of a file", "concat_lines() {", "  if [ -f \"$1\" ]; then", "    echo \"$(tr -s '\\n' ' ' < \"$1\")\"", "  fi", "}", "", "BASE_DIR=`find_maven_basedir \"$(pwd)\"`", "if [ -z \"$BASE_DIR\" ]; then", "  exit 1;", "fi", "", "##########################################################################################", "# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central", "# This allows using the maven wrapper in projects that prohibit checking in binary data.", "##########################################################################################", "if [ -r \"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\" ]; then", "    if [ \"$MVNW_VERBOSE\" = true ]; then", "      echo \"Found .mvn/wrapper/maven-wrapper.jar\"", "    fi", "else", "    if [ \"$MVNW_VERBOSE\" = true ]; then", "      echo \"Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ...\"", "    fi", "    if [ -n \"$MVNW_REPOURL\" ]; then", "      jarUrl=\"$MVNW_REPOURL/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar\"", "    else", "      jarUrl=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar\"", "    fi", "    while IFS=\"=\" read key value; do", "      case \"$key\" in (wrapperUrl) jarUrl=\"$value\"; break ;;", "      esac", "    done < \"$BASE_DIR/.mvn/wrapper/maven-wrapper.properties\"", "    if [ \"$MVNW_VERBOSE\" = true ]; then", "      echo \"Downloading from: $jarUrl\"", "    fi", "    wrapperJarPath=\"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\"", "    if $cygwin; then", "      wrapperJarPath=`cygpath --path --windows \"$wrapperJarPath\"`", "    fi", "", "    if command -v wget > /dev/null; then", "        if [ \"$MVNW_VERBOSE\" = true ]; then", "          echo \"Found wget ... using wget\"", "        fi", "        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then", "            wget \"$jarUrl\" -O \"$wrapperJarPath\" || rm -f \"$wrapperJarPath\"", "        else", "            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD \"$jarUrl\" -O \"$wrapperJarPath\" || rm -f \"$wrapperJarPath\"", "        fi", "    elif command -v curl > /dev/null; then", "        if [ \"$MVNW_VERBOSE\" = true ]; then", "          echo \"Found curl ... using curl\"", "        fi", "        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then", "            curl -o \"$wrapperJarPath\" \"$jarUrl\" -f", "        else", "            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o \"$wrapperJarPath\" \"$jarUrl\" -f", "        fi", "", "    else", "        if [ \"$MVNW_VERBOSE\" = true ]; then", "          echo \"Falling back to using Java to download\"", "        fi", "        javaClass=\"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java\"", "        # For Cygwin, switch paths to Windows format before running javac", "        if $cygwin; then", "          javaClass=`cygpath --path --windows \"$javaClass\"`", "        fi", "        if [ -e \"$javaClass\" ]; then", "            if [ ! -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then", "                if [ \"$MVNW_VERBOSE\" = true ]; then", "                  echo \" - Compiling MavenWrapperDownloader.java ...\"", "                fi", "                # Compiling the Java class", "                (\"$JAVA_HOME/bin/javac\" \"$javaClass\")", "            fi", "            if [ -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then", "                # Running the downloader", "                if [ \"$MVNW_VERBOSE\" = true ]; then", "                  echo \" - Running MavenWrapperDownloader.java ...\"", "                fi", "                (\"$JAVA_HOME/bin/java\" -cp .mvn/wrapper MavenWrapperDownloader \"$MAVEN_PROJECTBASEDIR\")", "            fi", "        fi", "    fi", "fi", "##########################################################################################", "# End of extension", "##########################################################################################", "", "export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}", "if [ \"$MVNW_VERBOSE\" = true ]; then", "  echo $MAVEN_PROJECTBASEDIR", "fi", "MAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"", "", "# For Cygwin, switch paths to Windows format before running java", "if $cygwin; then", "  [ -n \"$M2_HOME\" ] &&", "    M2_HOME=`cygpath --path --windows \"$M2_HOME\"`", "  [ -n \"$JAVA_HOME\" ] &&", "    JAVA_HOME=`cygpath --path --windows \"$JAVA_HOME\"`", "  [ -n \"$CLASSPATH\" ] &&", "    CLASSPATH=`cygpath --path --windows \"$CLASSPATH\"`", "  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&", "    MAVEN_PROJECTBASEDIR=`cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\"`", "fi", "", "# Provide a \"standardized\" way to retrieve the CLI args that will", "# work with both Windows and non-Windows executions.", "MAVEN_CMD_LINE_ARGS=\"$MAVEN_CONFIG $@\"", "export MAVEN_CMD_LINE_ARGS", "", "WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain", "", "exec \"$JAVACMD\" \\", "  $MAVEN_OPTS \\", "  $MAVEN_DEBUG_OPTS \\", "  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\", "  \"-Dmaven.home=${M2_HOME}\" \\", "  \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\", "  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\"" ]
  }, {
    "filename" : ".\\generated-application\\mvnw.cmd",
    "content" : [ "@REM ----------------------------------------------------------------------------", "@REM Licensed to the Apache Software Foundation (ASF) under one", "@REM or more contributor license agreements.  See the NOTICE file", "@REM distributed with this work for additional information", "@REM regarding copyright ownership.  The ASF licenses this file", "@REM to you under the Apache License, Version 2.0 (the", "@REM \"License\"); you may not use this file except in compliance", "@REM with the License.  You may obtain a copy of the License at", "@REM", "@REM    https://www.apache.org/licenses/LICENSE-2.0", "@REM", "@REM Unless required by applicable law or agreed to in writing,", "@REM software distributed under the License is distributed on an", "@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY", "@REM KIND, either express or implied.  See the License for the", "@REM specific language governing permissions and limitations", "@REM under the License.", "@REM ----------------------------------------------------------------------------", "", "@REM ----------------------------------------------------------------------------", "@REM Maven Start Up Batch script", "@REM", "@REM Required ENV vars:", "@REM JAVA_HOME - location of a JDK home dir", "@REM", "@REM Optional ENV vars", "@REM M2_HOME - location of maven2's installed home dir", "@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands", "@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending", "@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven", "@REM     e.g. to debug Maven itself, use", "@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000", "@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files", "@REM ----------------------------------------------------------------------------", "", "@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'", "@echo off", "@REM set title of command window", "title %0", "@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'", "@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%", "", "@REM set %HOME% to equivalent of $HOME", "if \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")", "", "@REM Execute a user defined script before this one", "if not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre", "@REM check for pre script, once with legacy .bat ending and once with .cmd ending", "if exist \"%USERPROFILE%\\mavenrc_pre.bat\" call \"%USERPROFILE%\\mavenrc_pre.bat\" %*", "if exist \"%USERPROFILE%\\mavenrc_pre.cmd\" call \"%USERPROFILE%\\mavenrc_pre.cmd\" %*", ":skipRcPre", "", "@setlocal", "", "set ERROR_CODE=0", "", "@REM To isolate internal variables from possible post scripts, we use another setlocal", "@setlocal", "", "@REM ==== START VALIDATION ====", "if not \"%JAVA_HOME%\" == \"\" goto OkJHome", "", "echo.", "echo Error: JAVA_HOME not found in your environment. >&2", "echo Please set the JAVA_HOME variable in your environment to match the >&2", "echo location of your Java installation. >&2", "echo.", "goto error", "", ":OkJHome", "if exist \"%JAVA_HOME%\\bin\\java.exe\" goto init", "", "echo.", "echo Error: JAVA_HOME is set to an invalid directory. >&2", "echo JAVA_HOME = \"%JAVA_HOME%\" >&2", "echo Please set the JAVA_HOME variable in your environment to match the >&2", "echo location of your Java installation. >&2", "echo.", "goto error", "", "@REM ==== END VALIDATION ====", "", ":init", "", "@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".", "@REM Fallback to current working directory if not found.", "", "set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%", "IF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir", "", "set EXEC_DIR=%CD%", "set WDIR=%EXEC_DIR%", ":findBaseDir", "IF EXIST \"%WDIR%\"\\.mvn goto baseDirFound", "cd ..", "IF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound", "set WDIR=%CD%", "goto findBaseDir", "", ":baseDirFound", "set MAVEN_PROJECTBASEDIR=%WDIR%", "cd \"%EXEC_DIR%\"", "goto endDetectBaseDir", "", ":baseDirNotFound", "set MAVEN_PROJECTBASEDIR=%EXEC_DIR%", "cd \"%EXEC_DIR%\"", "", ":endDetectBaseDir", "", "IF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig", "", "@setlocal EnableExtensions EnableDelayedExpansion", "for /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a", "@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%", "", ":endReadAdditionalConfig", "", "SET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"", "set WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"", "set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain", "", "set DOWNLOAD_URL=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar\"", "", "FOR /F \"usebackq tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (", "    IF \"%%A\"==\"wrapperUrl\" SET DOWNLOAD_URL=%%B", ")", "", "@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central", "@REM This allows using the maven wrapper in projects that prohibit checking in binary data.", "if exist %WRAPPER_JAR% (", "    if \"%MVNW_VERBOSE%\" == \"true\" (", "        echo Found %WRAPPER_JAR%", "    )", ") else (", "    if not \"%MVNW_REPOURL%\" == \"\" (", "        SET DOWNLOAD_URL=\"%MVNW_REPOURL%/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar\"", "    )", "    if \"%MVNW_VERBOSE%\" == \"true\" (", "        echo Couldn't find %WRAPPER_JAR%, downloading it ...", "        echo Downloading from: %DOWNLOAD_URL%", "    )", "", "    powershell -Command \"&{\"^", "\t\t\"$webclient = new-object System.Net.WebClient;\"^", "\t\t\"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {\"^", "\t\t\"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');\"^", "\t\t\"}\"^", "\t\t\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')\"^", "\t\t\"}\"", "    if \"%MVNW_VERBOSE%\" == \"true\" (", "        echo Finished downloading %WRAPPER_JAR%", "    )", ")", "@REM End of extension", "", "@REM Provide a \"standardized\" way to retrieve the CLI args that will", "@REM work with both Windows and non-Windows executions.", "set MAVEN_CMD_LINE_ARGS=%*", "", "%MAVEN_JAVA_EXE% ^", "  %JVM_CONFIG_MAVEN_PROPS% ^", "  %MAVEN_OPTS% ^", "  %MAVEN_DEBUG_OPTS% ^", "  -classpath %WRAPPER_JAR% ^", "  \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" ^", "  %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*", "if ERRORLEVEL 1 goto error", "goto end", "", ":error", "set ERROR_CODE=1", "", ":end", "@endlocal & set ERROR_CODE=%ERROR_CODE%", "", "if not \"%MAVEN_SKIP_RC%\"==\"\" goto skipRcPost", "@REM check for post script, once with legacy .bat ending and once with .cmd ending", "if exist \"%USERPROFILE%\\mavenrc_post.bat\" call \"%USERPROFILE%\\mavenrc_post.bat\"", "if exist \"%USERPROFILE%\\mavenrc_post.cmd\" call \"%USERPROFILE%\\mavenrc_post.cmd\"", ":skipRcPost", "", "@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'", "if \"%MAVEN_BATCH_PAUSE%\"==\"on\" pause", "", "if \"%MAVEN_TERMINATE_CMD%\"==\"on\" exit %ERROR_CODE%", "", "cmd /C exit /B %ERROR_CODE%" ]
  }, {
    "filename" : ".\\generated-application\\pom.xml",
    "content" : [ "<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"", "\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">", "\t<modelVersion>4.0.0</modelVersion>", "\t<parent>", "\t\t<groupId>org.springframework.boot</groupId>", "\t\t<artifactId>spring-boot-starter-parent</artifactId>", "\t\t<version>3.0.2</version>", "\t\t<relativePath/> <!-- lookup parent from repository -->", "\t</parent>", "\t<groupId>de.generator</groupId>", "\t<artifactId>generated-application</artifactId>", "\t<version>0.0.1-SNAPSHOT</version>", "\t<name>generated-application</name>", "\t<description>Generated basic build for Spring Boot</description>", "\t<properties>", "\t\t<java.version>17</java.version>", "\t</properties>", "\t<dependencies>", "\t\t<dependency>", "\t\t\t<groupId>org.springframework.boot</groupId>", "\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>", "\t\t</dependency>", "\t\t<dependency>", "\t\t\t<groupId>org.springframework.boot</groupId>", "\t\t\t<artifactId>spring-boot-starter-web</artifactId>", "\t\t</dependency>", "", "\t\t<dependency>", "\t\t\t<groupId>org.springframework.boot</groupId>", "\t\t\t<artifactId>spring-boot-devtools</artifactId>", "\t\t\t<scope>runtime</scope>", "\t\t\t<optional>true</optional>", "\t\t</dependency>", "\t\t<dependency>", "\t\t\t<groupId>com.h2database</groupId>", "\t\t\t<artifactId>h2</artifactId>", "\t\t\t<scope>runtime</scope>", "\t\t</dependency>", "\t\t<dependency>", "\t\t\t<groupId>org.projectlombok</groupId>", "\t\t\t<artifactId>lombok</artifactId>", "\t\t\t<optional>true</optional>", "\t\t</dependency>", "\t\t<dependency>", "\t\t\t<groupId>org.springframework.boot</groupId>", "\t\t\t<artifactId>spring-boot-starter-test</artifactId>", "\t\t\t<scope>test</scope>", "\t\t</dependency>", "\t</dependencies>", "", "\t<build>", "\t\t<plugins>", "\t\t\t<plugin>", "\t\t\t\t<groupId>org.springframework.boot</groupId>", "\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>", "\t\t\t\t<configuration>", "\t\t\t\t\t<excludes>", "\t\t\t\t\t\t<exclude>", "\t\t\t\t\t\t\t<groupId>org.projectlombok</groupId>", "\t\t\t\t\t\t\t<artifactId>lombok</artifactId>", "\t\t\t\t\t\t</exclude>", "\t\t\t\t\t</excludes>", "\t\t\t\t</configuration>", "\t\t\t</plugin>", "\t\t</plugins>", "\t</build>", "", "</project>" ]
  }, {
    "filename" : ".\\generated-application\\README.md",
    "content" : [ "# generated-application", "", "## Requirements", "For building and running the application you need:", "* [Java 17](https://www.oracle.com/java/technologies/javase/jdk17-archive-downloads.html)", "* [Maven 3.5 or above](https://maven.apache.org/download.cgi)", "", "## Run application locally", "You can run your application on your local machine in several ways. For example, you can execute the `main` method within your IDE.", "", "Alternatively you can use the Spring Boot Maven plugin by executing", "```", "mvn spring-boot:run", "```", "on the command line." ]
  }, {
    "filename" : ".\\generated-application\\src\\main\\java\\de\\generator\\generatedapplication\\controllers\\AntragControllerBase.java",
    "content" : [ "package de.generator.generatedapplication.controllers;", "", "import java.net.URI;", "import java.util.List;", "import java.util.Optional;", "", "import org.springframework.beans.factory.annotation.Autowired;", "import org.springframework.http.ResponseEntity;", "import org.springframework.web.bind.annotation.DeleteMapping;", "import org.springframework.web.bind.annotation.GetMapping;", "import org.springframework.web.bind.annotation.PathVariable;", "import org.springframework.web.bind.annotation.PostMapping;", "import org.springframework.web.bind.annotation.PutMapping;", "import org.springframework.web.bind.annotation.RequestBody;", "import org.springframework.web.bind.annotation.RestController;", "import org.springframework.web.servlet.support.ServletUriComponentsBuilder;", "", "import de.generator.generatedapplication.entities.*;", "import de.generator.generatedapplication.repositories.*;", "", "@RestController", "public abstract class AntragControllerBase {", "", "    @Autowired AntragRepositoryBase repository;", "", "    @GetMapping(\"/antraege\")", "    public List<AntragBase> getAll(){", "        return repository.findAll();", "    }", "", "    @GetMapping(\"/antraege/{id}\")", "    public AntragBase get(@PathVariable int id) {", "        Optional<AntragBase> res = repository.findById(id);", "        return res.orElse(null);", "    }", "", "    @DeleteMapping(\"/antraege/{id}\")", "    public void delete(@PathVariable int id) {", "        repository.deleteById(id);", "    }", "", "    @PostMapping(\"/antraege\")", "    public ResponseEntity<AntragBase> create(@RequestBody AntragBase subject) {", "        AntragBase savedSubject = repository.save(subject);", "        URI location = ServletUriComponentsBuilder.fromCurrentRequest().path(\"/{id}\").buildAndExpand(savedSubject.getId()).toUri();", "        return ResponseEntity.created(location).body(savedSubject);", "    }", "", "    @PutMapping(\"/antraege/{id}\")", "    public ResponseEntity<AntragBase> update(@RequestBody AntragBase subject, @PathVariable int id) {", "        Optional<AntragBase> res = repository.findById(id);", "        if (res.isEmpty()) return ResponseEntity.notFound().build();", "", "        subject.setId(id);", "        repository.save(subject);", "", "        return ResponseEntity.noContent().build();", "    }", "", "}" ]
  }, {
    "filename" : ".\\generated-application\\src\\main\\java\\de\\generator\\generatedapplication\\controllers\\AntragControllerImpl.java",
    "content" : [ "package de.generator.generatedapplication.controllers;", "", "import org.springframework.web.bind.annotation.RestController;", "", "@RestController", "public class AntragControllerImpl extends AntragControllerBaseGen {", "", "    // YOUR CODE HERE", "", "}" ]
  }, {
    "filename" : ".\\generated-application\\src\\main\\java\\de\\generator\\generatedapplication\\controllers\\BenutzerControllerBase.java",
    "content" : [ "package de.generator.generatedapplication.controllers;", "", "import java.net.URI;", "import java.util.List;", "import java.util.Optional;", "", "import org.springframework.beans.factory.annotation.Autowired;", "import org.springframework.http.ResponseEntity;", "import org.springframework.web.bind.annotation.DeleteMapping;", "import org.springframework.web.bind.annotation.GetMapping;", "import org.springframework.web.bind.annotation.PathVariable;", "import org.springframework.web.bind.annotation.PostMapping;", "import org.springframework.web.bind.annotation.PutMapping;", "import org.springframework.web.bind.annotation.RequestBody;", "import org.springframework.web.bind.annotation.RestController;", "import org.springframework.web.servlet.support.ServletUriComponentsBuilder;", "", "import de.generator.generatedapplication.entities.*;", "import de.generator.generatedapplication.repositories.*;", "", "@RestController", "public abstract class BenutzerControllerBase {", "", "    @Autowired BenutzerRepositoryBase repository;", "", "    @GetMapping(\"/benutzer\")", "    public List<BenutzerBase> getAll(){", "        return repository.findAll();", "    }", "", "    @GetMapping(\"/benutzer/{id}\")", "    public BenutzerBase get(@PathVariable int id) {", "        Optional<BenutzerBase> res = repository.findById(id);", "        return res.orElse(null);", "    }", "", "    @DeleteMapping(\"/benutzer/{id}\")", "    public void delete(@PathVariable int id) {", "        repository.deleteById(id);", "    }", "", "    @PostMapping(\"/benutzer\")", "    public ResponseEntity<BenutzerBase> create(@RequestBody BenutzerBase subject) {", "        BenutzerBase savedSubject = repository.save(subject);", "        URI location = ServletUriComponentsBuilder.fromCurrentRequest().path(\"/{id}\").buildAndExpand(savedSubject.getId()).toUri();", "        return ResponseEntity.created(location).body(savedSubject);", "    }", "", "    @PutMapping(\"/benutzer/{id}\")", "    public ResponseEntity<BenutzerBase> update(@RequestBody BenutzerBase subject, @PathVariable int id) {", "        Optional<BenutzerBase> res = repository.findById(id);", "        if (res.isEmpty()) return ResponseEntity.notFound().build();", "", "        subject.setId(id);", "        repository.save(subject);", "", "        return ResponseEntity.noContent().build();", "    }", "", "}" ]
  }, {
    "filename" : ".\\generated-application\\src\\main\\java\\de\\generator\\generatedapplication\\controllers\\BenutzerControllerImpl.java",
    "content" : [ "package de.generator.generatedapplication.controllers;", "", "import org.springframework.web.bind.annotation.RestController;", "", "@RestController", "public class BenutzerControllerImpl extends BenutzerControllerBaseGen {", "", "    // YOUR CODE HERE", "", "}" ]
  }, {
    "filename" : ".\\generated-application\\src\\main\\java\\de\\generator\\generatedapplication\\controllers\\FahrzeugControllerBase.java",
    "content" : [ "package de.generator.generatedapplication.controllers;", "", "import java.net.URI;", "import java.util.List;", "import java.util.Optional;", "", "import org.springframework.beans.factory.annotation.Autowired;", "import org.springframework.http.ResponseEntity;", "import org.springframework.web.bind.annotation.DeleteMapping;", "import org.springframework.web.bind.annotation.GetMapping;", "import org.springframework.web.bind.annotation.PathVariable;", "import org.springframework.web.bind.annotation.PostMapping;", "import org.springframework.web.bind.annotation.PutMapping;", "import org.springframework.web.bind.annotation.RequestBody;", "import org.springframework.web.bind.annotation.RestController;", "import org.springframework.web.servlet.support.ServletUriComponentsBuilder;", "", "import de.generator.generatedapplication.entities.*;", "import de.generator.generatedapplication.repositories.*;", "", "@RestController", "public abstract class FahrzeugControllerBase {", "", "    @Autowired FahrzeugRepositoryBase repository;", "", "    @GetMapping(\"/fahrzeuge\")", "    public List<FahrzeugBase> getAll(){", "        return repository.findAll();", "    }", "", "    @GetMapping(\"/fahrzeuge/{id}\")", "    public FahrzeugBase get(@PathVariable int id) {", "        Optional<FahrzeugBase> res = repository.findById(id);", "        return res.orElse(null);", "    }", "", "    @DeleteMapping(\"/fahrzeuge/{id}\")", "    public void delete(@PathVariable int id) {", "        repository.deleteById(id);", "    }", "", "    @PostMapping(\"/fahrzeuge\")", "    public ResponseEntity<FahrzeugBase> create(@RequestBody FahrzeugBase subject) {", "        FahrzeugBase savedSubject = repository.save(subject);", "        URI location = ServletUriComponentsBuilder.fromCurrentRequest().path(\"/{id}\").buildAndExpand(savedSubject.getId()).toUri();", "        return ResponseEntity.created(location).body(savedSubject);", "    }", "", "    @PutMapping(\"/fahrzeuge/{id}\")", "    public ResponseEntity<FahrzeugBase> update(@RequestBody FahrzeugBase subject, @PathVariable int id) {", "        Optional<FahrzeugBase> res = repository.findById(id);", "        if (res.isEmpty()) return ResponseEntity.notFound().build();", "", "        subject.setId(id);", "        repository.save(subject);", "", "        return ResponseEntity.noContent().build();", "    }", "", "}" ]
  }, {
    "filename" : ".\\generated-application\\src\\main\\java\\de\\generator\\generatedapplication\\controllers\\FahrzeugControllerImpl.java",
    "content" : [ "package de.generator.generatedapplication.controllers;", "", "import org.springframework.web.bind.annotation.RestController;", "", "@RestController", "public class FahrzeugControllerImpl extends FahrzeugControllerBaseGen {", "", "    // YOUR CODE HERE", "", "}" ]
  }, {
    "filename" : ".\\generated-application\\src\\main\\java\\de\\generator\\generatedapplication\\controllers\\HerstellerControllerBase.java",
    "content" : [ "package de.generator.generatedapplication.controllers;", "", "import java.net.URI;", "import java.util.List;", "import java.util.Optional;", "", "import org.springframework.beans.factory.annotation.Autowired;", "import org.springframework.http.ResponseEntity;", "import org.springframework.web.bind.annotation.DeleteMapping;", "import org.springframework.web.bind.annotation.GetMapping;", "import org.springframework.web.bind.annotation.PathVariable;", "import org.springframework.web.bind.annotation.PostMapping;", "import org.springframework.web.bind.annotation.PutMapping;", "import org.springframework.web.bind.annotation.RequestBody;", "import org.springframework.web.bind.annotation.RestController;", "import org.springframework.web.servlet.support.ServletUriComponentsBuilder;", "", "import de.generator.generatedapplication.entities.*;", "import de.generator.generatedapplication.repositories.*;", "", "@RestController", "public abstract class HerstellerControllerBase {", "", "    @Autowired HerstellerRepositoryBase repository;", "", "    @GetMapping(\"/hersteller\")", "    public List<HerstellerBase> getAll(){", "        return repository.findAll();", "    }", "", "    @GetMapping(\"/hersteller/{id}\")", "    public HerstellerBase get(@PathVariable int id) {", "        Optional<HerstellerBase> res = repository.findById(id);", "        return res.orElse(null);", "    }", "", "    @DeleteMapping(\"/hersteller/{id}\")", "    public void delete(@PathVariable int id) {", "        repository.deleteById(id);", "    }", "", "    @PostMapping(\"/hersteller\")", "    public ResponseEntity<HerstellerBase> create(@RequestBody HerstellerBase subject) {", "        HerstellerBase savedSubject = repository.save(subject);", "        URI location = ServletUriComponentsBuilder.fromCurrentRequest().path(\"/{id}\").buildAndExpand(savedSubject.getId()).toUri();", "        return ResponseEntity.created(location).body(savedSubject);", "    }", "", "    @PutMapping(\"/hersteller/{id}\")", "    public ResponseEntity<HerstellerBase> update(@RequestBody HerstellerBase subject, @PathVariable int id) {", "        Optional<HerstellerBase> res = repository.findById(id);", "        if (res.isEmpty()) return ResponseEntity.notFound().build();", "", "        subject.setId(id);", "        repository.save(subject);", "", "        return ResponseEntity.noContent().build();", "    }", "", "}" ]
  }, {
    "filename" : ".\\generated-application\\src\\main\\java\\de\\generator\\generatedapplication\\controllers\\HerstellerControllerImpl.java",
    "content" : [ "package de.generator.generatedapplication.controllers;", "", "import org.springframework.web.bind.annotation.RestController;", "", "@RestController", "public class HerstellerControllerImpl extends HerstellerControllerBaseGen {", "", "    // YOUR CODE HERE", "", "}" ]
  }, {
    "filename" : ".\\generated-application\\src\\main\\java\\de\\generator\\generatedapplication\\entities\\AntragBase.java",
    "content" : [ "package de.generator.generatedapplication.entities;", "", "import jakarta.persistence.*;", "", "@Entity", "public abstract class AntragBase {", "", "    @Id", "    @GeneratedValue", "    private int id;", "", "    private boolean istBearbeitet;", "", "    private boolean istFreigegeben;", "", "    private float kilometer;", "", "    private int kosten;", "", "    private String ziel;", "", "    @ManyToOne", "    @JoinColumn(name=\"FK_WunschFahrzeug\")", "    private FahrzeugBase wunschFahrzeug;", "", "    @ManyToOne", "    @JoinColumn(name=\"FK_Antragsteller\")", "    private BenutzerBase antragsteller;", "", "    @ManyToOne", "    @JoinColumn(name=\"FK_Flottenchef\")", "    private BenutzerBase flottenchef;", "", "", "    public AntragBase() {", "", "    }", "", "    public AntragBase(boolean istBearbeitet, boolean istFreigegeben, float kilometer, int kosten, String ziel) {", "        this.istBearbeitet = istBearbeitet;", "\t\tthis.istFreigegeben = istFreigegeben;", "\t\tthis.kilometer = kilometer;", "\t\tthis.kosten = kosten;", "\t\tthis.ziel = ziel;", "    }", "", "    public int getId() {", "        return id;", "    }", "", "    public void setId(int id) {", "        this.id = id;", "    }", "", "    public boolean getIstBearbeitet() {", "        return this.istBearbeitet;", "    }", "", "    public void setIstBearbeitet(boolean istBearbeitet) {", "        this.istBearbeitet = istBearbeitet;", "    }", "    public boolean getIstFreigegeben() {", "        return this.istFreigegeben;", "    }", "", "    public void setIstFreigegeben(boolean istFreigegeben) {", "        this.istFreigegeben = istFreigegeben;", "    }", "    public float getKilometer() {", "        return this.kilometer;", "    }", "", "    public void setKilometer(float kilometer) {", "        this.kilometer = kilometer;", "    }", "    public int getKosten() {", "        return this.kosten;", "    }", "", "    public void setKosten(int kosten) {", "        this.kosten = kosten;", "    }", "    public String getZiel() {", "        return this.ziel;", "    }", "", "    public void setZiel(String ziel) {", "        this.ziel = ziel;", "    }", "    public FahrzeugBase getWunschFahrzeug() {", "        return this.wunschFahrzeug;", "    }", "", "    public void setWunschFahrzeug(FahrzeugBase wunschFahrzeug) {", "        this.wunschFahrzeug = wunschFahrzeug;", "    }", "    public BenutzerBase getAntragsteller() {", "        return this.antragsteller;", "    }", "", "    public void setAntragsteller(BenutzerBase antragsteller) {", "        this.antragsteller = antragsteller;", "    }", "    public BenutzerBase getFlottenchef() {", "        return this.flottenchef;", "    }", "", "    public void setFlottenchef(BenutzerBase flottenchef) {", "        this.flottenchef = flottenchef;", "    }", "}" ]
  }, {
    "filename" : ".\\generated-application\\src\\main\\java\\de\\generator\\generatedapplication\\entities\\AntragImpl.java",
    "content" : [ "package de.generator.generatedapplication.entities;", "", "import jakarta.persistence.Entity;", "import lombok.Data;", "", "@Entity", "@Data", "public class AntragImpl extends AntragBaseGen {", "", "    // YOUR CODE HERE", "", "}" ]
  }, {
    "filename" : ".\\generated-application\\src\\main\\java\\de\\generator\\generatedapplication\\entities\\BenutzerBase.java",
    "content" : [ "package de.generator.generatedapplication.entities;", "", "import java.util.Collection;", "import com.fasterxml.jackson.annotation.JsonIgnore;", "import jakarta.persistence.*;", "", "@Entity", "public abstract class BenutzerBase {", "", "    @Id", "    @GeneratedValue", "    private int id;", "", "    @OneToMany(fetch=FetchType.LAZY, cascade=CascadeType.ALL, mappedBy=\"flottenchef\")", "    @JsonIgnore", "    private Collection<FahrzeugBase> verwalteteFahrzeuge;", "", "    @OneToMany(fetch=FetchType.LAZY, cascade=CascadeType.ALL, mappedBy=\"antragsteller\")", "    @JsonIgnore", "    private Collection<AntragBase> antraege;", "", "    @OneToMany(fetch=FetchType.LAZY, cascade=CascadeType.ALL, mappedBy=\"flottenchef\")", "    @JsonIgnore", "    private Collection<AntragBase> bearbeiteteAntraege;", "", "", "    public BenutzerBase() {", "", "    }", "", "", "    public int getId() {", "        return id;", "    }", "", "    public void setId(int id) {", "        this.id = id;", "    }", "", "    public Collection<FahrzeugBase> getVerwalteteFahrzeuge() {", "        return this.verwalteteFahrzeuge;", "    }", "", "    public void setVerwalteteFahrzeuge(Collection<FahrzeugBase> verwalteteFahrzeuge) {", "        this.verwalteteFahrzeuge = verwalteteFahrzeuge;", "    }", "    public Collection<AntragBase> getAntraege() {", "        return this.antraege;", "    }", "", "    public void setAntraege(Collection<AntragBase> antraege) {", "        this.antraege = antraege;", "    }", "    public Collection<AntragBase> getBearbeiteteAntraege() {", "        return this.bearbeiteteAntraege;", "    }", "", "    public void setBearbeiteteAntraege(Collection<AntragBase> bearbeiteteAntraege) {", "        this.bearbeiteteAntraege = bearbeiteteAntraege;", "    }", "}" ]
  }, {
    "filename" : ".\\generated-application\\src\\main\\java\\de\\generator\\generatedapplication\\entities\\BenutzerImpl.java",
    "content" : [ "package de.generator.generatedapplication.entities;", "", "import jakarta.persistence.Entity;", "import lombok.Data;", "", "@Entity", "@Data", "public class BenutzerImpl extends BenutzerBaseGen {", "", "    // YOUR CODE HERE", "", "}" ]
  }, {
    "filename" : ".\\generated-application\\src\\main\\java\\de\\generator\\generatedapplication\\entities\\FahrzeugBase.java",
    "content" : [ "package de.generator.generatedapplication.entities;", "", "import java.util.Collection;", "import com.fasterxml.jackson.annotation.JsonIgnore;", "import jakarta.persistence.*;", "", "@Entity", "public abstract class FahrzeugBase {", "", "    @Id", "    @GeneratedValue", "    private int id;", "", "    private String fahrgestellnummer;", "", "    private String kennzeichen;", "", "    private int kostenJeKilometer;", "", "    private String typbezeichnung;", "", "    @ManyToOne", "    @JoinColumn(name=\"FK_Hersteller\")", "    private HerstellerBase hersteller;", "", "    @ManyToOne", "    @JoinColumn(name=\"FK_Flottenchef\")", "    private BenutzerBase flottenchef;", "", "    @OneToMany(fetch=FetchType.LAZY, cascade=CascadeType.ALL, mappedBy=\"wunschFahrzeug\")", "    @JsonIgnore", "    private Collection<AntragBase> antrag;", "", "", "    public FahrzeugBase() {", "", "    }", "", "    public FahrzeugBase(String fahrgestellnummer, String kennzeichen, int kostenJeKilometer, String typbezeichnung) {", "        this.fahrgestellnummer = fahrgestellnummer;", "\t\tthis.kennzeichen = kennzeichen;", "\t\tthis.kostenJeKilometer = kostenJeKilometer;", "\t\tthis.typbezeichnung = typbezeichnung;", "    }", "", "    public int getId() {", "        return id;", "    }", "", "    public void setId(int id) {", "        this.id = id;", "    }", "", "    public String getFahrgestellnummer() {", "        return this.fahrgestellnummer;", "    }", "", "    public void setFahrgestellnummer(String fahrgestellnummer) {", "        this.fahrgestellnummer = fahrgestellnummer;", "    }", "    public String getKennzeichen() {", "        return this.kennzeichen;", "    }", "", "    public void setKennzeichen(String kennzeichen) {", "        this.kennzeichen = kennzeichen;", "    }", "    public int getKostenJeKilometer() {", "        return this.kostenJeKilometer;", "    }", "", "    public void setKostenJeKilometer(int kostenJeKilometer) {", "        this.kostenJeKilometer = kostenJeKilometer;", "    }", "    public String getTypbezeichnung() {", "        return this.typbezeichnung;", "    }", "", "    public void setTypbezeichnung(String typbezeichnung) {", "        this.typbezeichnung = typbezeichnung;", "    }", "    public HerstellerBase getHersteller() {", "        return this.hersteller;", "    }", "", "    public void setHersteller(HerstellerBase hersteller) {", "        this.hersteller = hersteller;", "    }", "    public BenutzerBase getFlottenchef() {", "        return this.flottenchef;", "    }", "", "    public void setFlottenchef(BenutzerBase flottenchef) {", "        this.flottenchef = flottenchef;", "    }", "    public Collection<AntragBase> getAntrag() {", "        return this.antrag;", "    }", "", "    public void setAntrag(Collection<AntragBase> antrag) {", "        this.antrag = antrag;", "    }", "}" ]
  }, {
    "filename" : ".\\generated-application\\src\\main\\java\\de\\generator\\generatedapplication\\entities\\FahrzeugImpl.java",
    "content" : [ "package de.generator.generatedapplication.entities;", "", "import jakarta.persistence.Entity;", "import lombok.Data;", "", "@Entity", "@Data", "public class FahrzeugImpl extends FahrzeugBaseGen {", "", "    // YOUR CODE HERE", "", "}" ]
  }, {
    "filename" : ".\\generated-application\\src\\main\\java\\de\\generator\\generatedapplication\\entities\\HerstellerBase.java",
    "content" : [ "package de.generator.generatedapplication.entities;", "", "import java.util.Collection;", "import com.fasterxml.jackson.annotation.JsonIgnore;", "import jakarta.persistence.*;", "", "@Entity", "public abstract class HerstellerBase {", "", "    @Id", "    @GeneratedValue", "    private int id;", "", "    private String name;", "", "    @OneToMany(fetch=FetchType.LAZY, cascade=CascadeType.ALL, mappedBy=\"hersteller\")", "    @JsonIgnore", "    private Collection<FahrzeugBase> fahrzeug;", "", "", "    public HerstellerBase() {", "", "    }", "", "    public HerstellerBase(String name) {", "        this.name = name;", "    }", "", "    public int getId() {", "        return id;", "    }", "", "    public void setId(int id) {", "        this.id = id;", "    }", "", "    public String getName() {", "        return this.name;", "    }", "", "    public void setName(String name) {", "        this.name = name;", "    }", "    public Collection<FahrzeugBase> getFahrzeug() {", "        return this.fahrzeug;", "    }", "", "    public void setFahrzeug(Collection<FahrzeugBase> fahrzeug) {", "        this.fahrzeug = fahrzeug;", "    }", "}" ]
  }, {
    "filename" : ".\\generated-application\\src\\main\\java\\de\\generator\\generatedapplication\\entities\\HerstellerImpl.java",
    "content" : [ "package de.generator.generatedapplication.entities;", "", "import jakarta.persistence.Entity;", "import lombok.Data;", "", "@Entity", "@Data", "public class HerstellerImpl extends HerstellerBaseGen {", "", "    // YOUR CODE HERE", "", "}" ]
  }, {
    "filename" : ".\\generated-application\\src\\main\\java\\de\\generator\\generatedapplication\\GeneratedApplication.java",
    "content" : [ "package de.generator.generatedapplication;", "", "import org.springframework.boot.SpringApplication;", "import org.springframework.boot.autoconfigure.SpringBootApplication;", "", "@SpringBootApplication", "public class GeneratedApplication {", "", "\tpublic static void main(String[] args) {", "\t\tSpringApplication.run(GeneratedApplication.class, args);", "\t}", "", "}" ]
  }, {
    "filename" : ".\\generated-application\\src\\main\\java\\de\\generator\\generatedapplication\\repositories\\AntragRepositoryBase.java",
    "content" : [ "package de.generator.generatedapplication.repositories;", "", "import org.springframework.data.jpa.repository.JpaRepository;", "import de.generator.generatedapplication.entities.*;", "", "public interface AntragRepositoryBase extends JpaRepository<AntragBase, Integer> {", "", "}" ]
  }, {
    "filename" : ".\\generated-application\\src\\main\\java\\de\\generator\\generatedapplication\\repositories\\AntragRepositoryImpl.java",
    "content" : [ "package de.generator.generatedapplication.repositories;", "", "public interface AntragRepositoryImpl extends AntragRepositoryBaseGen {", "", "    // YOUR CODE HERE", "", "}" ]
  }, {
    "filename" : ".\\generated-application\\src\\main\\java\\de\\generator\\generatedapplication\\repositories\\BenutzerRepositoryBase.java",
    "content" : [ "package de.generator.generatedapplication.repositories;", "", "import org.springframework.data.jpa.repository.JpaRepository;", "import de.generator.generatedapplication.entities.*;", "", "public interface BenutzerRepositoryBase extends JpaRepository<BenutzerBase, Integer> {", "", "}" ]
  }, {
    "filename" : ".\\generated-application\\src\\main\\java\\de\\generator\\generatedapplication\\repositories\\BenutzerRepositoryImpl.java",
    "content" : [ "package de.generator.generatedapplication.repositories;", "", "public interface BenutzerRepositoryImpl extends BenutzerRepositoryBaseGen {", "", "    // YOUR CODE HERE", "", "}" ]
  }, {
    "filename" : ".\\generated-application\\src\\main\\java\\de\\generator\\generatedapplication\\repositories\\FahrzeugRepositoryBase.java",
    "content" : [ "package de.generator.generatedapplication.repositories;", "", "import org.springframework.data.jpa.repository.JpaRepository;", "import de.generator.generatedapplication.entities.*;", "", "public interface FahrzeugRepositoryBase extends JpaRepository<FahrzeugBase, Integer> {", "", "}" ]
  }, {
    "filename" : ".\\generated-application\\src\\main\\java\\de\\generator\\generatedapplication\\repositories\\FahrzeugRepositoryImpl.java",
    "content" : [ "package de.generator.generatedapplication.repositories;", "", "public interface FahrzeugRepositoryImpl extends FahrzeugRepositoryBaseGen {", "", "    // YOUR CODE HERE", "", "}" ]
  }, {
    "filename" : ".\\generated-application\\src\\main\\java\\de\\generator\\generatedapplication\\repositories\\HerstellerRepositoryBase.java",
    "content" : [ "package de.generator.generatedapplication.repositories;", "", "import org.springframework.data.jpa.repository.JpaRepository;", "import de.generator.generatedapplication.entities.*;", "", "public interface HerstellerRepositoryBase extends JpaRepository<HerstellerBase, Integer> {", "", "}" ]
  }, {
    "filename" : ".\\generated-application\\src\\main\\java\\de\\generator\\generatedapplication\\repositories\\HerstellerRepositoryImpl.java",
    "content" : [ "package de.generator.generatedapplication.repositories;", "", "public interface HerstellerRepositoryImpl extends HerstellerRepositoryBaseGen {", "", "    // YOUR CODE HERE", "", "}" ]
  }, {
    "filename" : ".\\generated-application\\src\\main\\resources\\application.properties",
    "content" : [ "# Spring Configurations", "spring.application.name = generated-application", "server.port = 8080", "", "# JPA Configurations", "spring.jpa.properties.jakarta.persistence.sharedCache.mode=ALL", "spring.jpa.open-in-view=true", "", "# H2 Configurations", "spring.datasource.url=jdbc:h2:mem:generated-application", "spring.datasource.username=root", "spring.datasource.password=root", "spring.datasource.driver-class-name=org.h2.Driver" ]
  }, {
    "filename" : ".\\generated-application\\src\\main\\resources\\WhatsApp Image 2023-01-09 at 18.24.25(1).jpeg",
    "content" : [ "" ]
  }, {
    "filename" : ".\\generated-application\\src\\test\\java\\de\\generator\\generatedapplication\\GeneratedApplicationTests.java",
    "content" : [ "package de.generator.generatedapplication;", "", "import org.junit.jupiter.api.Test;", "import org.springframework.boot.test.context.SpringBootTest;", "", "@SpringBootTest", "class GeneratedApplicationTests {", "", "\t@Test", "\tvoid contextLoads() {", "\t}", "", "}" ]
  } ]
}